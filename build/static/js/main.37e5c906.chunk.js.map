{"version":3,"sources":["components/ImageApp.js","App.js","index.js"],"names":["ImageApp","takePhoto","canvas","getContext","drawImage","videoPlayer","imageCaptured","src","toDataURL","style","display","MarkerArea","document","getElementById","show","dataUrl","devices","forEach","device","setDevice","deviceId","navigator","mediaDevices","getUserMedia","audio","video","stream","this","srcObject","play","enumerateDevices","cameras","processDevices","console","log","m","open","ref","width","heigh","onClick","height","hidden","id","alt","marginTop","Component","App","className","React","ReactDOM","render"],"mappings":"sTAGqBA,E,2MAgCnBC,UAAY,WAEM,EAAKC,OAAOC,WAAW,MAC/BC,UAAU,EAAKC,YAAa,EAAG,EAAG,IAAK,KAC/C,EAAKC,cAAcC,IAAM,EAAKL,OAAOM,UAAU,aAC/C,EAAKF,cAAcG,MAAMC,QAAU,QAEzB,IAAIC,IAAWC,SAASC,eAAe,oBAC/CC,MAAK,SAAAC,GACOH,SAASC,eAAe,mBAChCN,IAAMQ,M,8EAzCCC,GAAU,IAAD,OACtBA,EAAQC,SAAQ,SAAAC,GACd,EAAKC,UAAUD,Q,yEAIHA,G,gFACNE,EAAaF,EAAbE,S,SACaC,UAAUC,aAAaC,aAAa,CACvDC,OAAO,EACPC,MAAO,CAAEL,c,OAFLM,E,OAINC,KAAKtB,YAAYuB,UAAYF,EAC7BC,KAAKtB,YAAYwB,O,iRAIKR,UAAUC,aAAaQ,mB,OAAvCC,E,OACNJ,KAAKK,eAAeD,G,iJAIpBE,QAAQC,IAAI,QACZ,IAAMC,EAAI,IAAIxB,IAAWC,SAASC,eAAe,oBACjDoB,QAAQC,IAAI,MAAOC,GACnBA,EAAEC,MAAK,SAAArB,GACOH,SAASC,eAAe,mBAChCN,IAAMQ,O,+BAmBJ,IAAD,OACP,OACE,oCACE,2BAAOsB,IAAK,SAAAA,GAAG,OAAK,EAAKhC,YAAcgC,GAAMC,MAAM,MAAMC,MAAM,QAC/D,6BACA,4BAAQ9B,MAAO,CAAEC,QAAS,SAAW8B,QAASb,KAAK1B,WAAnD,eAGA,6BACA,4BACEqC,MAAM,MACNG,OAAO,MACPJ,IAAK,SAAAA,GAAG,OAAK,EAAKnC,OAASmC,GAC3BK,QAAM,IAER,yBACEC,GAAG,kBACHN,IAAK,SAAAA,GAAG,OAAK,EAAK/B,cAAgB+B,GAClCC,MAAM,MACNC,MAAM,MACNK,IAAI,0BACJnC,MAAO,CAAEC,QAAS,OAAQmC,UAAW,e,GApETC,aC4BvBC,E,iLAdX,OACE,yBAAKC,UAAU,OACb,gCACE,yDAEF,kBAAC,EAAD,MACA,kC,GAjBUC,IAAMH,WCAxBI,IAASC,OAAO,kBAAC,EAAD,MAASvC,SAASC,eAAe,W","file":"static/js/main.37e5c906.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MarkerArea } from \"markerjs\";\r\n\r\nexport default class ImageApp extends Component {\r\n  processDevices(devices) {\r\n    devices.forEach(device => {\r\n      this.setDevice(device);\r\n    });\r\n  }\r\n\r\n  async setDevice(device) {\r\n    const { deviceId } = device;\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: false,\r\n      video: { deviceId }\r\n    });\r\n    this.videoPlayer.srcObject = stream;\r\n    this.videoPlayer.play();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const cameras = await navigator.mediaDevices.enumerateDevices();\r\n    this.processDevices(cameras);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('llll');\r\n    const m = new MarkerArea(document.getElementById(\"imageToAnnotate\"));\r\n    console.log('mmm', m);\r\n    m.open(dataUrl => {\r\n      const res = document.getElementById(\"imageToAnnotate\");\r\n      res.src = dataUrl;\r\n    });\r\n  }\r\n\r\n  takePhoto = () => {\r\n    // const { sendFile } = this.props;\r\n    const context = this.canvas.getContext(\"2d\");\r\n    context.drawImage(this.videoPlayer, 0, 0, 400, 300);\r\n    this.imageCaptured.src = this.canvas.toDataURL(\"image/png\");\r\n    this.imageCaptured.style.display = \"block\";\r\n\r\n    const m = new MarkerArea(document.getElementById(\"imageToAnnotate\"));\r\n    m.show(dataUrl => {\r\n      const res = document.getElementById(\"imageToAnnotate\");\r\n      res.src = dataUrl;\r\n    });\r\n    //this.canvas.toBlob(sendFile);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <video ref={ref => (this.videoPlayer = ref)} width=\"400\" heigh=\"300\" />\r\n        <br></br>\r\n        <button style={{ display: \"block\" }} onClick={this.takePhoto}>\r\n          Take photo!\r\n        </button>\r\n        <br></br>\r\n        <canvas\r\n          width=\"400\"\r\n          height=\"300\"\r\n          ref={ref => (this.canvas = ref)}\r\n          hidden\r\n        />\r\n        <img\r\n          id=\"imageToAnnotate\"\r\n          ref={ref => (this.imageCaptured = ref)}\r\n          width=\"400\"\r\n          heigh=\"300\"\r\n          alt=\"captured for annotation\"\r\n          style={{ display: \"none\", marginTop: \"30px\" }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n// import image from './test-image-1.jpg';\r\n// import { MarkerArea } from 'markerjs';\r\nimport './App.css';\r\nimport ImageApp from './components/ImageApp';\r\n\r\nclass App extends React.Component {\r\n//   componentDidMount() {\r\n//     const m = new MarkerArea(document.getElementById('imageToAnnotate'));\r\n// m.open(\r\n//     (dataUrl) => {\r\n//         const res = document.getElementById(\"imageToAnnotate\");\r\n//         res.src = dataUrl;\r\n//     }\r\n// );\r\n//   }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <h1>Image Annotation Example</h1>\r\n        </header>\r\n        <ImageApp />\r\n        <br></br>\r\n        \r\n          {/* <img src={image} id=\"imageToAnnotate\" alt=\"marker test\" height=\"300\" width=\"344\" style={{marginTop: '40px'}}></img> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}